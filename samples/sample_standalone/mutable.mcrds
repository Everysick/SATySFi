let concat1 lst =
  if is-empty lst then {/} else
    let hd = list-head lst in
    let tl = list-tail lst in
      {/} ^ hd ^ (concat1 tl)

let-mutable mutlst <- []
let-mutable result <- {}
let concat2 lst =
(   mutlst <- lst
  before
    result <- {}
  before
  ( while not (is-empty (!mutlst)) do
    ( result <- !result ^ {/} ^ (list-head (!mutlst))
        before mutlst <- (list-tail (!mutlst))
    )
  )
  before
    !result ^ {/}
)
in
  (concat1 {|Karush|Kuhn|Tucker|})
  ^ {\break;}
  ^ (concat2 {|Karush|Kuhn|Tucker|})
