% -*- coding: utf-8 -*-
document (|
  title  = {Math Test};
  author = {gfn};
|) '<
  +make-title;
  +p {
    The
    \math(math-list [
      math-Z;
      math-equal;
      math-minus;
      math-sup math-e math-x;
%      math-plus;
%      math-sup math-e (math-frac math-x math-2);
      math-plus;
      math-sup math-f (math-sup math-x (math-sup math-n math-2));
      math-minus;
      math-sub math-a math-2;
      math-plus;
      math-sup (math-sub math-Y math-f) math-2;
      math-minus;
      math-A;
      math-plus;
      math-B;
      math-C;
    ]);
    quick brown fox jumps over the lazy dog.
    This document
    \math(math-list [
      math-angle (math-sup math-F math-n);
      math-angle math-F;
      math-equal;
      math-sup (math-angle (math-list [
        math-G;
        math-frac (math-list [math-M; math-m]) (math-sup math-R math-2);
      ])) (math-list [math-n; math-plus; math-1]);
    ]);
    was typeset by using \satysfi;.
    Big math:
    \math(math-list [
      math-sub (math-angle (math-frac (math-angle (math-list [math-frac math-A math-B; math-plus; math-C]))
        (math-sup math-D (math-angle (math-list [math-n; math-minus; math-1]))))) math-2
    ]);,
    layered:
    \math(math-list [
      math-angle (math-list [math-angle (math-list [math-angle math-A; math-plus; math-B]); math-plus; math-C]);
    ]);,
    radical:
    \math(math-list [
      math-2;
      math-sqrt math-3;
      math-plus;
      math-frac math-2 (math-sqrt math-5);
      math-plus;
      math-frac math-1 (math-sqrt (math-list [math-sup math-x math-2; math-plus; math-1]));
    ]);,
    the solution of the equation
    \math(math-list [
      math-a; math-sup math-x math-2; math-plus; math-b; math-x; math-plus; math-c; math-equal; math-0;
    ]); as to \math(math-x); is
    \math(
      let math-det = math-list [math-sup math-b math-2; math-minus; math-4; math-a; math-c] in
      math-list [
        math-x;
        math-equal;
        math-frac (math-list [math-minus; math-b; math-pm; math-sqrt math-det]) (math-list [math-2; math-a]);
      ]
    );.
    Layered radical:
    \math(math-sqrt (math-sqrt (math-sqrt (math-sqrt math-2))));,
    limits:
    \math(math-list [
      math-lim (math-list [math-n; math-to; math-infty]);
      math-sup (math-angle (math-list [math-1; math-plus; math-frac math-1 math-n])) math-n;
      math-equal;
      math-e;
    ]);,
    fraction superscript:
    \math(math-sup math-e (math-frac math-x math-2));,
    sub-superscript:
    \math(math-list [math-sup (math-sub math-a (math-list [math-n; math-minus; math-1])) math-2; math-b]);,
    sub-superscript correction:
    \math(math-sup (math-sub math-a math-1) (math-frac math-n math-2));,
    big operator:
    \math(math-list [
      math-lower (math-upper math-sum math-infty) (math-list [math-n; math-equal; math-1]);
      math-frac math-1 (math-sup math-n math-2);
      math-equal;
      math-frac (math-sup math-pi math-2) math-6;
    ]);,
    integral:
    \math(math-list [
      math-sup (math-sub math-int math-0) math-1;
      math-sqrt (math-list [math-1; math-minus; math-sup math-x math-2]);
      math-ordd;
      math-x;
    ]);,
    texts contained in formulae:
    \math(math-list [
      math-frac (text-in-math MathOrd (fun ctx -> read-inline ctx {Hoge})) math-2;
      math-plus;
      math-sqrt (text-in-math MathOrd (fun ctx -> read-inline ctx {Piyo}));
    ]);,
    tuple:
    \math(math-angle (math-list [
      math-x; math-comma; math-y; math-comma; math-z;
    ]));.
  }
  +math (
    let int1 = math-sup (math-sub math-int math-0) math-a in
    let sqrt2 = math-sqrt (math-list [(math-sup math-a math-2); math-minus; (math-sup math-x math-2)]) in
    let int2 = math-sup (math-sub math-int math-0) sqrt2 in
    let sqrt1 = math-sqrt (math-list [(math-sup math-x math-2); math-plus; (math-sup math-r math-2)]) in
      math-list [
        math-frac (math-list [
          int1; math-x; math-ordd; math-x;
          int2; math-r; sqrt1; math-ordd; math-r;
        ]) (math-list [
          int1; math-ordd; math-x;
          int2; math-r; sqrt1; math-ordd; math-r;
        ]);
        math-equal;
        math-frac (math-list [math-2; math-a]) math-5;
      ]
  );
>
