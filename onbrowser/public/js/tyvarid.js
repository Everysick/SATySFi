// Generated by BUCKLESCRIPT VERSION 1.0.1 , PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives");

var tvidmax = [0];

function initialize() {
  tvidmax[0] = 0;
  return /* () */0;
}

function fresh(qtfbl) {
  var res = tvidmax[0];
  tvidmax[0] = tvidmax[0] + 1 | 0;
  return /* tuple */[
          res,
          [qtfbl]
        ];
}

function same(tvid1, tvid2) {
  return +(tvid1[0] === tvid2[0]);
}

function show_direct(tvid) {
  var tvn = tvid[0];
  var match = tvid[1][0];
  if (match !== 0) {
    return "_" + Pervasives.string_of_int(tvn);
  }
  else {
    return Pervasives.string_of_int(tvn);
  }
}

function is_quantifiable(tvid) {
  var match = tvid[1][0];
  if (match !== 0) {
    return /* false */0;
  }
  else {
    return /* true */1;
  }
}

function make_unquantifiable_if_needed(param) {
  var q1 = param[0][1];
  var q2 = param[1][1];
  var match = q1[0];
  var match$1 = q2[0];
  if (match !== 0) {
    q1[0] = /* Unquantifiable */1;
    q2[0] = /* Unquantifiable */1;
    return /* () */0;
  }
  else if (match$1 !== 0) {
    q1[0] = /* Unquantifiable */1;
    q2[0] = /* Unquantifiable */1;
    return /* () */0;
  }
  else {
    return /* () */0;
  }
}

function set_quantifiability(qtfbl, tvid) {
  tvid[1][0] = qtfbl;
  return tvid;
}

exports.initialize                    = initialize;
exports.fresh                         = fresh;
exports.same                          = same;
exports.show_direct                   = show_direct;
exports.is_quantifiable               = is_quantifiable;
exports.make_unquantifiable_if_needed = make_unquantifiable_if_needed;
exports.set_quantifiability           = set_quantifiability;
/* No side effect */
