// Generated by BUCKLESCRIPT VERSION 1.0.1 , PLEASE EDIT WITH CARE
'use strict';

var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions");

var Underflow = Caml_exceptions.create("Stacklist.Underflow");

function pop(rfstk) {
  var match = rfstk[0];
  if (match) {
    rfstk[0] = match[1];
    return match[0];
  }
  else {
    throw Underflow;
  }
}

function delete_top(rfstk) {
  var match = rfstk[0];
  if (match) {
    rfstk[0] = match[1];
    return /* () */0;
  }
  else {
    throw Underflow;
  }
}

function is_empty(rfstk) {
  var match = rfstk[0];
  if (match) {
    return /* false */0;
  }
  else {
    return /* true */1;
  }
}

function push(rfstk, cnt) {
  rfstk[0] = /* :: */[
    cnt,
    rfstk[0]
  ];
  return /* () */0;
}

function top(rfstk) {
  var match = rfstk[0];
  if (match) {
    return match[0];
  }
  else {
    throw Underflow;
  }
}

function concat(lsta, lstb) {
  if (lsta) {
    return /* :: */[
            lsta[0],
            concat(lsta[1], lstb)
          ];
  }
  else {
    return lstb;
  }
}

function to_list(stk) {
  if (stk) {
    return concat(to_list(stk[1]), /* :: */[
                stk[0],
                /* [] */0
              ]);
  }
  else {
    return /* [] */0;
  }
}

var empty = /* [] */0;

exports.empty      = empty;
exports.pop        = pop;
exports.delete_top = delete_top;
exports.is_empty   = is_empty;
exports.top        = top;
exports.push       = push;
exports.to_list    = to_list;
/* No side effect */
