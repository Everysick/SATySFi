\main{\shallow;
  \head{
    \settings;
    \title{Macrodown}
    \author{Takashi SUWA (a.k.a gfn)}
  }
  \body{
    \section{概要}
    \p{
      \newword{Macrodown}（\newword{マクロダウン}）は\LaTeX;やHTMLなどのマークアップ言語をラップするための
      軽量［要出典］マークアップ言語です。
      マクロ定義機能があり，可変長引数を扱うこともできます。
    }
    \section{動機}
    \p{
      今日，一般的な文書作成のために多用されているマークアップ言語としては
      HTML+CSSや\LaTeX;などが挙げられます。
    }
    \p{
      しかしこのHTML+CSSと\LaTeX;は一長一短です。
    }
    \p{
      HTML+CSSは構造と体裁がよく分離されており，CSSによる体裁の変更等も柔軟ですが，
      記法が冗長で，またマクロ定義機能も存在していない\footnote{おそらく意図的に取り入れられていないのでしょう。}ため，
      直接人間の手で文書を記述するには適しているとは思えません。
    }
    \p{
      一方の\LaTeX;は比較的平易な記法でマクロ定義機能が備わっており，先達による高度なパッケージも充実し，
      そして何よりもソフトウェアとしての\TeX;が高品質な組版結果を出力してくれますが，
      構造と体裁が明示的に分離されていないため体裁を扱うには或る程度のリテラシーが必要であったり，
      柔軟なマクロを創るには\TeX; on \LaTeX;の知識が必要で，これが相当非直感的な仕様であるため，
      大多数の人を寄せつけない様相を呈しています。
    }
    \p{
      これらの欠点を解決し，またWebページとPDFを共通の規格で記述できるようにすべく，
      Macrodownの制作に手をつけました。
      記法は主に\LaTeX;を参考にしており，「意味論が綺麗な\LaTeX;的記法」を目指したといってもいいかもしれません。
      特に重視したのは可変長引数の扱いです。
      現在はまだ簡素な最小限の姿に留まっていますが，
      今後も条件分岐や整数を扱えるようにしたりといった拡張が考えられます。
    }
    \section{仕様}
    \subsection{トークン化}
    \p{
      大小ラテン文字とアラビア数字とハイフンを\newword{基本文字}，その他の文字を\newword{非基本文字}として，
      Macrodownは文字列を以下にマッチするようにトークン化します。
      ただし * は0回以上の繰り返しを表します。
      複数通りのマッチがある場合はより長い文字列ほど優先し，
      同一の文字列が複数のトークンにマッチする場合は表で上位に掲げられているものほど優先されます。
    }
    \description{
      \d-item{\synt{\bksl;macro}}{\math{\token-macro;}：\newword{マクロ定義トークン}}
    |
      \d-item{\synt{\bksl;pop}}{\math{\token-pop;}：\newword{ポップ機能トークン}}
    |
      \d-item{\synt{\bksl;}（基本文字）*}{\math{\token-cs;}：\newword{制御綴トークン}}
    |
      \d-item{\synt{\atmark;}（基本文字）*}{\math{\token-macro;}：\newword{変数名トークン}}
    |
      \d-item{\synt{\numsign;}（基本文字）*}{\math{\token-id;}：\newword{ID名トークン}}
    |
      \d-item{\synt{\lbrace;}}{\math{\token-bgrp;}：\newword{開きトークン}}
    |
      \d-item{\synt{\rbrace;}}{\math{\token-egrp;}：\newword{閉じトークン}}
    |
      \d-item{\synt{\;}}{\math{\token-end;}：\newword{無引数終端トークン}}
    |
      \d-item{\synt{\brokenbar;}}{\math{\token-sep;}：\newword{区切りトークン}}
    |
      \d-item{\synt{\bksl;}（非基本文字）}{\math{\token-char;}：エスケープされた\newword{文字トークン}}
    |
      \d-item{（1文字）}{\math{\token-char;}：\newword{文字トークン}}
    }
    \subsection{空白類を無視する条件}
    \p{
      空白文字，タブ文字，改行文字を\newword{空白類}と呼ぶことにします。
      空白類は無視されるものと文字トークンとされるものが出現場所によって決まり，
      以下に出現した場合は無視されます。
    }
    \itemize{
      行頭
    |
      制御綴トークンの直後
    |
      変数名トークンの直後
    |
      ID名トークンの直後
    |
      空白類の直後
    }
    \subsection{構文木化}
    \p{
      \math{\token-eoi;}を入力の終端として，Macrodownは以下の\math{T}で表現される入力を受理します。
    }
    \math-dp-gather{
      \cfl{T}{ B \token-eoi; }
    |
      \cfl{B}{ \epsilon; | S B }
    |
      \cfl{S}{ \token-char; | \token-var; \token-end; | \token-pop; \token-var; \token-var; G G %
        | \token-macro; \token-cs; A G | \token-cs; \token-end; | \token-cs; G P }
    |
      \cfl{A}{ \epsilon; | \token-var; A }
    |
      \cfl{P}{ \epsilon; | G P }
    |
      \cfl{G}{ \token-bgrp; L \token-egrp; }
    |
      \cfl{L}{ B | B \token-sep; L }
    }
  }
\deepen;}
